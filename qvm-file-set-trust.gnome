#!/bin/bash
#
# The Qubes OS Project, http://www.qubes-os.org
#
# Copyright (C) 2010 Andrew Morgan <andrew@amorgan.xyz>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
#

# Tell bash to stop if command executed with error
set -exuo pipefail

# File path of untrusted mime types list
UNTR_MIME_FILE="/home/user/untrusted-mime-types"

# Check if the file exists, and create if not
if [ ! -f "$UNTR_MIME_FILE" ]; then
    touch "$UNTR_MIME_FILE"
fi

# Check if filepath was supplied
if [ -z "$1" ]; then
    echo "No filepath supplied"
    exit -1
fi

# Get file mime-type
FILEPATH_MIMETYPE="$(file -b --mime-type $1)"

# Check if filetype is already marked as untrusted
FILETYPE_ALREADY_UNTR=false
if [ ! -z $(grep "$FILEPATH_MIMETYPE" "$UNTR_MIME_FILE") ]; then
    FILETYPE_ALREADY_UNTR=true
fi

# Check if file is already marked as untrusted
FILE_ALREADY_UNTR=false

# First check if file is readable. Since we can't read files that are
# marked as untrusted (as they are chmod'd 0, we'll just assume
# unreadable files as untrusted
if ! [[ -r "$1" ]]; then
    FILE_ALREADY_UNTR=true
elif [ ! -z getfattr --name "user.qubes.untrusted" "$1" ]; then
    # Check the extended file attributes for our specific tag.
    # If we find it, then it's untrusted
    FILE_ALREADY_UNTR=true
fi

# Create a dialog box asking the user to set trust rules
MARK_FILE="Always open this file in a DisposableVM" 
MARK_FILETYPE="Always open this file type in a DisposableVM" 
CHOICE=$(zenity --list --text "What you would like to do with file: ""<b>$(basename "$1")""</b>?" --checklist --column "Pick" --column "Title" $FILE_ALREADY_UNTR "$MARK_FILE" $FILETYPE_ALREADY_UNTR "$MARK_FILETYPE ($FILEPATH_MIMETYPE)" --separator=":")

if [[ $CHOICE = *"$MARK_FILE"* ]] ; then 
    # Mark this file as untrusted
    if [[ $FILE_ALREADY_UNTR = false ]]; then
        setfattr --name "user.qubes.untrusted" --value "true" "$1"

        # Lock file so it can't be edited
        chmod 0 "$1"
    fi
else
    # Unlock file
    if [[ $FILE_ALREADY_UNTR = true ]]; then
        chmod 644 "$1"

        # Remove untrusted extended file attribute
        setfattr --remove "user.qubes.untrusted" "$1"
    fi
fi

# If user selected to mark filetype, do so
if [[ $CHOICE = *"$MARK_FILETYPE"* ]] ; then
    # Mark this filetype as untrusted
    if [[ $FILETYPE_ALREADY_UNTR = false ]]; then
        # Append new filetype to the end of the file
        echo "$FILEPATH_MIMETYPE" >> $UNTR_MIME_FILE
    fi

else
    # Else, remove if already marked
    if [[ $FILETYPE_ALREADY_UNTR = true ]]; then
        # Remove shell commands from string
        ESCAPED_MIMETYPE=$(LC_ALL=C sed -e 's/[^a-zA-Z0-9,._+@%]/\\&/g; 1{$s/^$/""/}; 1!s/^/"/; $!s/$/"/' <<< "$FILEPATH_MIMETYPE")
        sed -i /$ESCAPED_MIMETYPE/d $UNTR_MIME_FILE
    fi
fi 
